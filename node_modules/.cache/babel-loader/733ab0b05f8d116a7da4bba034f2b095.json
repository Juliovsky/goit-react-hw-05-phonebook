{"ast":null,"code":"var _jsxFileName = \"/Users/macylia/Projects/goit-react-hw-05-phonebook/src/components/Phonebook.js\";\nimport React, { Component } from \"react\";\nimport { InputForm } from './InputForm/InputForm';\nimport { BtnFormSubmit } from './Button/BtnFormSubmit';\nimport { uuid } from 'uuidv4';\nimport styles from './InputForm/inputForm.module.css'; // import List from \"./List/List\";\n\nimport { Alert } from \"./Alert/Alert\";\nimport alertTransition from './Alert/transitions/alert.module.css';\nimport { CSSTransition } from \"react-transition-group\";\nimport css from \"./InputForm/inputForm.module.css\";\nimport fadeTransition from \"./InputForm/transitions/fade.module.css\"; // import css from \"./InputForm/inputForm.module.css\";\n\nclass Phonebook extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      contact: '',\n      number: '',\n      isOpen: false,\n      isAlert: false\n    };\n\n    this.handleChange = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n\n    this.checkContactExist = contactName => {\n      this.setState(prevstate => ({\n        isAlert: !prevstate.isAlert\n      })); // const allContacts = this.props.contacts;\n      // const include = allContacts.filter(item =>\n      //     item.contact.toLowerCase()\n      //         .includes(contactName.toLowerCase())\n      // );\n      //\n      // return (include.length !== 0);\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      const contact = this.state.contact;\n      const number = this.state.number;\n\n      if (contact && number) {\n        // (!this.checkContactExist(contact))\n        // {\n        const newContact = {\n          id: uuid(),\n          contact,\n          number\n        };\n        this.props.getContactInfo(newContact);\n        this.setState({\n          contact: '',\n          number: ''\n        });\n        this.saveToLocalStorage(newContact);\n        this.checkContactExist(); // }\n      }\n    };\n  }\n\n  componentDidMount() {\n    this.setState({\n      isOpen: true,\n      isAlert: false\n    });\n  }\n\n  saveToLocalStorage(contact) {\n    if (!localStorage.getItem('contacts')) {\n      localStorage.setItem('contacts', JSON.stringify([]));\n    }\n\n    let localStorageArray = JSON.parse(localStorage.getItem('contacts'));\n    console.log(localStorageArray);\n    localStorageArray.push(contact);\n\n    contacts: localStorage.setItem('contacts', JSON.stringify(localStorageArray));\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      className: styles.form,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(InputForm, {\n      desForm: this.state.isOpen,\n      contact: this.state.contact,\n      number: this.state.number,\n      handleChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(BtnFormSubmit, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(CSSTransition, {\n      in: this.checkContactExist(this.state.contact),\n      timeout: 2000,\n      classNames: fadeTransition,\n      unmountOnExit: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Alert, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 21\n      }\n    })));\n  }\n\n}\n\nexport default Phonebook; // handleSubmit = (e) => {\n//     e.preventDefault();\n//     const contact = this.state.contact;\n//     const number = this.state.number;\n//     if (contact && number) {\n//\n//         if (this.checkContactExist(contact)) {\n//             return <Alert/>\n//\n//         } else {\n//             const newContact = {id: uuid(), contact, number}\n//             this.props.getContactInfo(newContact);\n//             this.setState({contact: '', number: ''});\n//\n//             this.saveToLocalStorage(newContact);\n//         }\n//     }","map":{"version":3,"sources":["/Users/macylia/Projects/goit-react-hw-05-phonebook/src/components/Phonebook.js"],"names":["React","Component","InputForm","BtnFormSubmit","uuid","styles","Alert","alertTransition","CSSTransition","css","fadeTransition","Phonebook","state","contact","number","isOpen","isAlert","handleChange","e","setState","target","name","value","checkContactExist","contactName","prevstate","handleSubmit","preventDefault","newContact","id","props","getContactInfo","saveToLocalStorage","componentDidMount","localStorage","getItem","setItem","JSON","stringify","localStorageArray","parse","console","log","push","contacts","render","form"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,SAAR,QAAwB,uBAAxB;AACA,SAAQC,aAAR,QAA4B,wBAA5B;AACA,SAAQC,IAAR,QAAmB,QAAnB;AACA,OAAOC,MAAP,MAAmB,kCAAnB,C,CACA;;AACA,SAAQC,KAAR,QAAoB,eAApB;AACA,OAAOC,eAAP,MAA4B,sCAA5B;AACA,SAAQC,aAAR,QAA4B,wBAA5B;AACA,OAAOC,GAAP,MAAgB,kCAAhB;AACA,OAAOC,cAAP,MAA2B,yCAA3B,C,CAEA;;AAGA,MAAMC,SAAN,SAAwBV,SAAxB,CAAkC;AAAA;AAAA;AAAA,SAC9BW,KAD8B,GACtB;AACJC,MAAAA,OAAO,EAAE,EADL;AAEJC,MAAAA,MAAM,EAAE,EAFJ;AAGJC,MAAAA,MAAM,EAAE,KAHJ;AAIJC,MAAAA,OAAO,EAAE;AAJL,KADsB;;AAAA,SAoB9BC,YApB8B,GAoBdC,CAAD,IAAO;AAClB,WAAKC,QAAL,CAAc;AACV,SAACD,CAAC,CAACE,MAAF,CAASC,IAAV,GAAiBH,CAAC,CAACE,MAAF,CAASE;AADhB,OAAd;AAGH,KAxB6B;;AAAA,SA0B9BC,iBA1B8B,GA0BTC,WAAD,IAAiB;AACjC,WAAKL,QAAL,CAAcM,SAAS,KAAG;AAACT,QAAAA,OAAO,EAAC,CAACS,SAAS,CAACT;AAApB,OAAH,CAAvB,EADiC,CAEjC;AACA;AACA;AACA;AACA;AACA;AACA;AACH,KAnC6B;;AAAA,SAsC9BU,YAtC8B,GAsCdR,CAAD,IAAO;AAClBA,MAAAA,CAAC,CAACS,cAAF;AACA,YAAMd,OAAO,GAAG,KAAKD,KAAL,CAAWC,OAA3B;AACA,YAAMC,MAAM,GAAG,KAAKF,KAAL,CAAWE,MAA1B;;AACA,UAAID,OAAO,IAAIC,MAAf,EAAuB;AACnB;AACA;AACI,cAAMc,UAAU,GAAG;AAACC,UAAAA,EAAE,EAAEzB,IAAI,EAAT;AAAaS,UAAAA,OAAb;AAAsBC,UAAAA;AAAtB,SAAnB;AACA,aAAKgB,KAAL,CAAWC,cAAX,CAA0BH,UAA1B;AACA,aAAKT,QAAL,CAAc;AAACN,UAAAA,OAAO,EAAE,EAAV;AAAcC,UAAAA,MAAM,EAAE;AAAtB,SAAd;AACA,aAAKkB,kBAAL,CAAwBJ,UAAxB;AACA,aAAKL,iBAAL,GAPe,CAQnB;AACH;AACJ,KApD6B;AAAA;;AAU9BU,EAAAA,iBAAiB,GAAG;AAEhB,SAAKd,QAAL,CAAc;AACVJ,MAAAA,MAAM,EAAE,IADE;AAEVC,MAAAA,OAAO,EAAE;AAFC,KAAd;AAKH;;AAsCDgB,EAAAA,kBAAkB,CAACnB,OAAD,EAAU;AACxB,QAAI,CAACqB,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAL,EAAuC;AACnCD,MAAAA,YAAY,CAACE,OAAb,CAAqB,UAArB,EAAiCC,IAAI,CAACC,SAAL,CAAe,EAAf,CAAjC;AACH;;AAED,QAAIC,iBAAiB,GAAGF,IAAI,CAACG,KAAL,CAAYN,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAZ,CAAxB;AACAM,IAAAA,OAAO,CAACC,GAAR,CAAYH,iBAAZ;AAEAA,IAAAA,iBAAiB,CAACI,IAAlB,CAAuB9B,OAAvB;;AACA+B,IAAAA,QAAQ,EAAEV,YAAY,CAACE,OAAb,CAAqB,UAArB,EAAiCC,IAAI,CAACC,SAAL,CAAeC,iBAAf,CAAjC;AACb;;AAGDM,EAAAA,MAAM,GAAG;AAEL,wBACI,uDACA;AAAM,MAAA,QAAQ,EAAE,KAAKnB,YAArB;AAAmC,MAAA,SAAS,EAAErB,MAAM,CAACyC,IAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,SAAD;AACI,MAAA,OAAO,EAAE,KAAKlC,KAAL,CAAWG,MADxB;AAEI,MAAA,OAAO,EAAE,KAAKH,KAAL,CAAWC,OAFxB;AAGI,MAAA,MAAM,EAAE,KAAKD,KAAL,CAAWE,MAHvB;AAII,MAAA,YAAY,EAAE,KAAKG,YAJvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,eAOI,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAPJ,CADA,eAUI,oBAAC,aAAD;AAAe,MAAA,EAAE,EAAE,KAAKM,iBAAL,CAAuB,KAAKX,KAAL,CAAWC,OAAlC,CAAnB;AAA+D,MAAA,OAAO,EAAE,IAAxE;AAA8E,MAAA,UAAU,EAAEH,cAA1F;AAA0G,MAAA,aAAa,MAAvH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CAVJ,CADJ;AAiBH;;AAvF6B;;AA2FlC,eAAeC,SAAf,C,CAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React, {Component} from \"react\";\nimport {InputForm} from './InputForm/InputForm';\nimport {BtnFormSubmit} from './Button/BtnFormSubmit';\nimport {uuid} from 'uuidv4';\nimport styles from './InputForm/inputForm.module.css'\n// import List from \"./List/List\";\nimport {Alert} from \"./Alert/Alert\";\nimport alertTransition from './Alert/transitions/alert.module.css'\nimport {CSSTransition} from \"react-transition-group\";\nimport css from \"./InputForm/inputForm.module.css\";\nimport fadeTransition from \"./InputForm/transitions/fade.module.css\";\n\n// import css from \"./InputForm/inputForm.module.css\";\n\n\nclass Phonebook extends Component {\n    state = {\n        contact: '',\n        number: '',\n        isOpen: false,\n        isAlert: false,\n\n\n    };\n\n    componentDidMount() {\n\n        this.setState({\n            isOpen: true,\n            isAlert: false\n        });\n\n    }\n\n\n    handleChange = (e) => {\n        this.setState({\n            [e.target.name]: e.target.value\n        })\n    };\n\n    checkContactExist = (contactName) => {\n        this.setState(prevstate=>({isAlert:!prevstate.isAlert}))\n        // const allContacts = this.props.contacts;\n        // const include = allContacts.filter(item =>\n        //     item.contact.toLowerCase()\n        //         .includes(contactName.toLowerCase())\n        // );\n        //\n        // return (include.length !== 0);\n    }\n\n\n    handleSubmit = (e) => {\n        e.preventDefault();\n        const contact = this.state.contact;\n        const number = this.state.number;\n        if (contact && number) {\n            // (!this.checkContactExist(contact))\n            // {\n                const newContact = {id: uuid(), contact, number}\n                this.props.getContactInfo(newContact);\n                this.setState({contact: '', number: ''});\n                this.saveToLocalStorage(newContact);\n                this.checkContactExist()\n            // }\n        }\n    }\n\n\n    saveToLocalStorage(contact) {\n        if (!localStorage.getItem('contacts')) {\n            localStorage.setItem('contacts', JSON.stringify([]));\n        }\n\n        let localStorageArray = JSON.parse((localStorage.getItem('contacts')));\n        console.log(localStorageArray)\n\n        localStorageArray.push(contact);\n        contacts: localStorage.setItem('contacts', JSON.stringify(localStorageArray))\n    }\n\n\n    render() {\n\n        return (\n            <>\n            <form onSubmit={this.handleSubmit} className={styles.form}>\n                <InputForm\n                    desForm={this.state.isOpen}\n                    contact={this.state.contact}\n                    number={this.state.number}\n                    handleChange={this.handleChange}\n                />\n                <BtnFormSubmit/>\n            </form>\n                <CSSTransition in={this.checkContactExist(this.state.contact)} timeout={2000} classNames={fadeTransition} unmountOnExit>\n                    <Alert/>\n                </CSSTransition>\n             </>\n\n        );\n    }\n\n}\n\nexport default Phonebook;\n\n\n// handleSubmit = (e) => {\n//     e.preventDefault();\n//     const contact = this.state.contact;\n//     const number = this.state.number;\n//     if (contact && number) {\n//\n//         if (this.checkContactExist(contact)) {\n//             return <Alert/>\n//\n//         } else {\n//             const newContact = {id: uuid(), contact, number}\n//             this.props.getContactInfo(newContact);\n//             this.setState({contact: '', number: ''});\n//\n//             this.saveToLocalStorage(newContact);\n//         }\n//     }"]},"metadata":{},"sourceType":"module"}